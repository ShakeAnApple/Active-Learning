<?xml version="1.0" encoding="UTF-8"?>
<FBType Name="CentralController" Comment="Basic Function Block Type" Namespace="Main">  <Identification Standard="61499-2" />
  <VersionInfo Organization="nxtControl GmbH" Version="0.0" Author="cspgen" Date="2011-08-30" Remarks="Template" />

  <InterfaceList>
    <EventInputs>
      <Event Name="INIT" Comment="Initialization Request" ></Event>
      <Event Name="REQ" Comment="REQ" >
        <With Var="c1Home" />
        <With Var="c1End" />
        <With Var="c2Home" />
        <With Var="c2End" />
        <With Var="vcHome" />
        <With Var="vcEnd" />
        <With Var="pp1" />
        <With Var="pp2" />
        <With Var="pp3" />
        <With Var="vac" />
      </Event>
    </EventInputs>
    <EventOutputs>
      <Event Name="INITO" Comment="INITO" >
        <With Var="c1Extend" />
        <With Var="c1Retract" />
        <With Var="c2Extend" />
        <With Var="c2Retract" />
        <With Var="vcExtend" />
        <With Var="vacuum_on" />
        <With Var="vacuum_off" />
      </Event>
      <Event Name="CNF" Comment="CNF" >
        <With Var="c1Extend" />
        <With Var="c1Retract" />
        <With Var="c2Extend" />
        <With Var="c2Retract" />
        <With Var="vcExtend" />
        <With Var="vacuum_on" />
        <With Var="vacuum_off" />
      </Event>
    </EventOutputs>
    <InputVars>
      <VarDeclaration Name="c1Home" Type="BOOL" />
      <VarDeclaration Name="c1End" Type="BOOL" />
      <VarDeclaration Name="c2Home" Type="BOOL" />
      <VarDeclaration Name="c2End" Type="BOOL" />
      <VarDeclaration Name="vcHome" Type="BOOL" />
      <VarDeclaration Name="vcEnd" Type="BOOL" />
      <VarDeclaration Name="pp1" Type="BOOL" />
      <VarDeclaration Name="pp2" Type="BOOL" />
      <VarDeclaration Name="pp3" Type="BOOL" />
      <VarDeclaration Name="vac" Type="BOOL" />
    </InputVars>
    <OutputVars>
      <VarDeclaration Name="c1Extend" Type="BOOL" />
      <VarDeclaration Name="c1Retract" Type="BOOL" />
      <VarDeclaration Name="c2Extend" Type="BOOL" />
      <VarDeclaration Name="c2Retract" Type="BOOL" />
      <VarDeclaration Name="vcExtend" Type="BOOL" />
      <VarDeclaration Name="vacuum_on" Type="BOOL" />
      <VarDeclaration Name="vacuum_off" Type="BOOL" />
    </OutputVars>
  </InterfaceList>

  <BasicFB>
    <ECC>
        <ECState Name="START" Comment="Initial State" x="769" y="699" > </ECState>
        <ECState Name="INIT" Comment="Initialization" x="947" y="396" >
          <ECAction Algorithm="INIT" Output="INITO" />
        </ECState>
        <ECState Name="s_0" x="290" y="919">
          <ECAction Algorithm="a_0000000_0000000" Output="" />
        </ECState>
        <ECState Name="s_1" x="101" y="514">
          <ECAction Algorithm="a_0010000_1010010_CNF" Output="CNF" />
        </ECState>
        <ECState Name="s_2" x="471" y="648">
          <ECAction Algorithm="a_1010000_1010010_CNF" Output="CNF" />
        </ECState>
        <ECState Name="s_3" x="676" y="442">
          <ECAction Algorithm="a_1000000_1010010_CNF" Output="CNF" />
        </ECState>
        <ECState Name="s_4" x="255" y="50">
          <ECAction Algorithm="a_0000100_1111011_CNF" Output="CNF" />
        </ECState>
        <ECState Name="s_5" x="75" y="349">
          <ECAction Algorithm="a_0000110_1111110_CNF" Output="CNF" />
        </ECState>
        <ECState Name="s_6" x="258" y="83">
          <ECAction Algorithm="a_0101000_0101011_CNF" Output="CNF" />
        </ECState>
        <ECState Name="s_7" x="682" y="481">
          <ECAction Algorithm="a_0000101_0111100_CNF" Output="CNF" />
        </ECState>
      <ECTransition Source="START" Destination="INIT" Condition="INIT" x="363" y="702" />
      <ECTransition Source="INIT" Destination="s_0" Condition="1" x="58" y="920" />
      <ECTransition Source="s_0" Destination="s_1" Condition="REQ&amp;pp2" x="594" y="277"/>
      <ECTransition Source="s_0" Destination="s_3" Condition="REQ&amp;pp1" x="42" y="930"/>
      <ECTransition Source="s_0" Destination="s_2" Condition="REQ&amp;pp3" x="101" y="381"/>
      <ECTransition Source="s_1" Destination="s_4" Condition="REQ&amp;c2End" x="472" y="233"/>
      <ECTransition Source="s_2" Destination="s_4" Condition="REQ&amp;c2End" x="484" y="644"/>
      <ECTransition Source="s_3" Destination="s_4" Condition="REQ&amp;c1End" x="791" y="494"/>
      <ECTransition Source="s_4" Destination="s_5" Condition="REQ&amp;((NOT  (vac)) AND (vcEnd))" x="599" y="211"/>
      <ECTransition Source="s_4" Destination="s_6" Condition="REQ&amp;((vcHome) AND (vac))" x="243" y="646"/>
      <ECTransition Source="s_4" Destination="s_3" Condition="REQ&amp;((c1Home) AND (((vcHome) AND (pp1))))" x="782" y="162"/>
      <ECTransition Source="s_4" Destination="s_1" Condition="REQ&amp;((((c1Home) AND (c2Home))) AND (vcHome))" x="138" y="175"/>
      <ECTransition Source="s_5" Destination="s_4" Condition="REQ&amp;((c1End) OR (c2End))" x="615" y="538"/>
      <ECTransition Source="s_5" Destination="s_7" Condition="REQ&amp;vcEnd" x="518" y="112"/>
      <ECTransition Source="s_6" Destination="s_1" Condition="REQ&amp;((((NOT  (((pp1) OR (vac)))) AND (vcHome))) AND (pp2))" x="767" y="302"/>
      <ECTransition Source="s_6" Destination="s_2" Condition="REQ&amp;((((NOT  (vac)) AND (vcHome))) AND (pp3))" x="39" y="618"/>
      <ECTransition Source="s_6" Destination="s_5" Condition="REQ&amp;((((c2Home) AND (vac))) AND (c1Home))" x="849" y="775"/>
      <ECTransition Source="s_6" Destination="s_3" Condition="REQ&amp;((c2Home) AND (((vcHome) AND (pp1))))" x="478" y="655"/>
      <ECTransition Source="s_7" Destination="s_4" Condition="REQ&amp;((((NOT  (pp1)) AND (pp2))) OR (((pp1) AND (pp3))))" x="820" y="859"/>
      <ECTransition Source="s_7" Destination="s_6" Condition="REQ&amp;c2Home" x="637" y="750"/>
    </ECC>
    <Algorithm Name="INIT" Comment="Initialization algorithm" >
      <ST Text="REQ := FALSE;&#xD;&#xA;c1Extend:=FALSE;&#xD;&#xA;c1Retract:=FALSE;&#xD;&#xA;c2Extend:=FALSE;&#xD;&#xA;c2Retract:=FALSE;&#xD;&#xA;vcExtend:=FALSE;&#xD;&#xA;vacuum_on:=FALSE;&#xD;&#xA;vacuum_off:=FALSE;&#xD;&#xA;"/>
    </Algorithm>
    <Algorithm Name="a_0000100_1111011_CNF">
      <ST Text=" REQ := FALSE;&#xD;&#xA;IF c1Extend THEN&#xD;&#xA;c1Extend := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;c1Extend := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF c1Retract THEN&#xD;&#xA;c1Retract := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;c1Retract := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF c2Extend THEN&#xD;&#xA;c2Extend := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;c2Extend := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF c2Retract THEN&#xD;&#xA;c2Retract := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;c2Retract := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF vcExtend THEN&#xD;&#xA;vcExtend := FALSE;&#xD;&#xA;ELSE&#xD;&#xA;vcExtend := TRUE;&#xD;&#xA;END_IF;&#xD;&#xA;IF vacuum_on THEN&#xD;&#xA;vacuum_on := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;vacuum_on := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF vacuum_off THEN&#xD;&#xA;vacuum_off := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;vacuum_off := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;"/>
    </Algorithm>
    <Algorithm Name="a_0000000_0000000">
      <ST Text=" REQ := FALSE;&#xD;&#xA;IF c1Extend THEN&#xD;&#xA;c1Extend := FALSE;&#xD;&#xA;ELSE&#xD;&#xA;c1Extend := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF c1Retract THEN&#xD;&#xA;c1Retract := FALSE;&#xD;&#xA;ELSE&#xD;&#xA;c1Retract := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF c2Extend THEN&#xD;&#xA;c2Extend := FALSE;&#xD;&#xA;ELSE&#xD;&#xA;c2Extend := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF c2Retract THEN&#xD;&#xA;c2Retract := FALSE;&#xD;&#xA;ELSE&#xD;&#xA;c2Retract := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF vcExtend THEN&#xD;&#xA;vcExtend := FALSE;&#xD;&#xA;ELSE&#xD;&#xA;vcExtend := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF vacuum_on THEN&#xD;&#xA;vacuum_on := FALSE;&#xD;&#xA;ELSE&#xD;&#xA;vacuum_on := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF vacuum_off THEN&#xD;&#xA;vacuum_off := FALSE;&#xD;&#xA;ELSE&#xD;&#xA;vacuum_off := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;"/>
    </Algorithm>
    <Algorithm Name="a_1010000_1010010_CNF">
      <ST Text=" REQ := FALSE;&#xD;&#xA;IF c1Extend THEN&#xD;&#xA;c1Extend := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;c1Extend := TRUE;&#xD;&#xA;END_IF;&#xD;&#xA;IF c1Retract THEN&#xD;&#xA;c1Retract := FALSE;&#xD;&#xA;ELSE&#xD;&#xA;c1Retract := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF c2Extend THEN&#xD;&#xA;c2Extend := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;c2Extend := TRUE;&#xD;&#xA;END_IF;&#xD;&#xA;IF c2Retract THEN&#xD;&#xA;c2Retract := FALSE;&#xD;&#xA;ELSE&#xD;&#xA;c2Retract := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF vcExtend THEN&#xD;&#xA;vcExtend := FALSE;&#xD;&#xA;ELSE&#xD;&#xA;vcExtend := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF vacuum_on THEN&#xD;&#xA;vacuum_on := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;vacuum_on := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF vacuum_off THEN&#xD;&#xA;vacuum_off := FALSE;&#xD;&#xA;ELSE&#xD;&#xA;vacuum_off := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;"/>
    </Algorithm>
    <Algorithm Name="a_0010000_1010010_CNF">
      <ST Text=" REQ := FALSE;&#xD;&#xA;IF c1Extend THEN&#xD;&#xA;c1Extend := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;c1Extend := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF c1Retract THEN&#xD;&#xA;c1Retract := FALSE;&#xD;&#xA;ELSE&#xD;&#xA;c1Retract := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF c2Extend THEN&#xD;&#xA;c2Extend := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;c2Extend := TRUE;&#xD;&#xA;END_IF;&#xD;&#xA;IF c2Retract THEN&#xD;&#xA;c2Retract := FALSE;&#xD;&#xA;ELSE&#xD;&#xA;c2Retract := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF vcExtend THEN&#xD;&#xA;vcExtend := FALSE;&#xD;&#xA;ELSE&#xD;&#xA;vcExtend := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF vacuum_on THEN&#xD;&#xA;vacuum_on := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;vacuum_on := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF vacuum_off THEN&#xD;&#xA;vacuum_off := FALSE;&#xD;&#xA;ELSE&#xD;&#xA;vacuum_off := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;"/>
    </Algorithm>
    <Algorithm Name="a_1000000_1010010_CNF">
      <ST Text=" REQ := FALSE;&#xD;&#xA;IF c1Extend THEN&#xD;&#xA;c1Extend := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;c1Extend := TRUE;&#xD;&#xA;END_IF;&#xD;&#xA;IF c1Retract THEN&#xD;&#xA;c1Retract := FALSE;&#xD;&#xA;ELSE&#xD;&#xA;c1Retract := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF c2Extend THEN&#xD;&#xA;c2Extend := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;c2Extend := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF c2Retract THEN&#xD;&#xA;c2Retract := FALSE;&#xD;&#xA;ELSE&#xD;&#xA;c2Retract := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF vcExtend THEN&#xD;&#xA;vcExtend := FALSE;&#xD;&#xA;ELSE&#xD;&#xA;vcExtend := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF vacuum_on THEN&#xD;&#xA;vacuum_on := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;vacuum_on := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF vacuum_off THEN&#xD;&#xA;vacuum_off := FALSE;&#xD;&#xA;ELSE&#xD;&#xA;vacuum_off := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;"/>
    </Algorithm>
    <Algorithm Name="a_0000110_1111110_CNF">
      <ST Text=" REQ := FALSE;&#xD;&#xA;IF c1Extend THEN&#xD;&#xA;c1Extend := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;c1Extend := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF c1Retract THEN&#xD;&#xA;c1Retract := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;c1Retract := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF c2Extend THEN&#xD;&#xA;c2Extend := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;c2Extend := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF c2Retract THEN&#xD;&#xA;c2Retract := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;c2Retract := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF vcExtend THEN&#xD;&#xA;vcExtend := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;vcExtend := TRUE;&#xD;&#xA;END_IF;&#xD;&#xA;IF vacuum_on THEN&#xD;&#xA;vacuum_on := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;vacuum_on := TRUE;&#xD;&#xA;END_IF;&#xD;&#xA;IF vacuum_off THEN&#xD;&#xA;vacuum_off := FALSE;&#xD;&#xA;ELSE&#xD;&#xA;vacuum_off := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;"/>
    </Algorithm>
    <Algorithm Name="a_0101000_0101011_CNF">
      <ST Text=" REQ := FALSE;&#xD;&#xA;IF c1Extend THEN&#xD;&#xA;c1Extend := FALSE;&#xD;&#xA;ELSE&#xD;&#xA;c1Extend := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF c1Retract THEN&#xD;&#xA;c1Retract := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;c1Retract := TRUE;&#xD;&#xA;END_IF;&#xD;&#xA;IF c2Extend THEN&#xD;&#xA;c2Extend := FALSE;&#xD;&#xA;ELSE&#xD;&#xA;c2Extend := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF c2Retract THEN&#xD;&#xA;c2Retract := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;c2Retract := TRUE;&#xD;&#xA;END_IF;&#xD;&#xA;IF vcExtend THEN&#xD;&#xA;vcExtend := FALSE;&#xD;&#xA;ELSE&#xD;&#xA;vcExtend := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF vacuum_on THEN&#xD;&#xA;vacuum_on := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;vacuum_on := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF vacuum_off THEN&#xD;&#xA;vacuum_off := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;vacuum_off := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;"/>
    </Algorithm>
    <Algorithm Name="a_0000101_0111100_CNF">
      <ST Text=" REQ := FALSE;&#xD;&#xA;IF c1Extend THEN&#xD;&#xA;c1Extend := FALSE;&#xD;&#xA;ELSE&#xD;&#xA;c1Extend := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF c1Retract THEN&#xD;&#xA;c1Retract := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;c1Retract := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF c2Extend THEN&#xD;&#xA;c2Extend := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;c2Extend := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF c2Retract THEN&#xD;&#xA;c2Retract := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;c2Retract := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF vcExtend THEN&#xD;&#xA;vcExtend := TRUE;&#xD;&#xA;ELSE&#xD;&#xA;vcExtend := TRUE;&#xD;&#xA;END_IF;&#xD;&#xA;IF vacuum_on THEN&#xD;&#xA;vacuum_on := FALSE;&#xD;&#xA;ELSE&#xD;&#xA;vacuum_on := FALSE;&#xD;&#xA;END_IF;&#xD;&#xA;IF vacuum_off THEN&#xD;&#xA;vacuum_off := FALSE;&#xD;&#xA;ELSE&#xD;&#xA;vacuum_off := TRUE;&#xD;&#xA;END_IF;&#xD;&#xA;"/>
    </Algorithm>
  </BasicFB>

</FBType>
